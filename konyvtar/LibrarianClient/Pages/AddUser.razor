@page "/members/add"
@inject ILibraryService LibraryService
@inject NavigationManager NavigationManager

<h3>Add New User</h3>
    <EditForm Model="@newUser" OnValidSubmit="@AddNewUser">
        <div class="form-group row">
            <label for="name" class="col-sm-2 col-form-label">Name:</label>
            <div class="col-sm-10">
                <input type="text" id="name" class="form-control" @bind="newUser.Name" />
            </div>
        </div>
        
        <div class="form-group row">
            <label for="address" class="col-sm-2 col-form-label">Address:</label>
            <div class="col-sm-10">
                <input type="text" id="address" class="form-control" @bind="newUser.Address" />
            </div>
        </div>

        <div class="form-group row">
            <label for="birthDate" class="col-sm-2 col-form-label">Birth:</label>
            <div class="col-sm-10">
                <input type="date" id="birthDate" class="form-control" @bind="newUser.BirthDate" />
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-10 offset-sm-2">
                <button type="submit" class="btn btn-primary">Add User</button>
                <button type="button" class="btn btn-danger" @onclick="CancelAdd">Cancel</button>
            </div>
        </div>
    </EditForm>

@code {
    private User newUser = new User();

    private async Task AddNewUser()
    {
        try
        {
            await LibraryService.AddUser(newUser);
            newUser = new User();
            NavigationManager.NavigateTo("/members");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Failed to add user: {ex.Message}");
        }
    }

    private async Task CancelAdd()
    {
        newUser = new User();
        NavigationManager.NavigateTo("/members");
    }
}